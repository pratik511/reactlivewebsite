{"version":3,"sources":["component/Alert.js","component/List.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","type","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","className","role","List","items","removeItem","editItem","map","item","id","title","style","float","onClick","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIdEditing","editId","setEditID","show","alert","setAlert","setItem","stringify","showAlert","onSubmit","e","preventDefault","newItem","Date","getTime","toString","marginBottom","textAlign","placeholder","onChange","target","value","length","marginTop","filter","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0fdfd0a.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nconst Alert = ({ type, msg, removeAlert, list }) => {\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            removeAlert();\r\n        },5*1000 );\r\n        return () => clearTimeout(timeout);\r\n    }, [list]);\r\n    return <p className={`alert alert-${type}`} role=\"alert\">{msg}</p>\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react'\r\nimport { FaEdit, FaTrash } from 'react-icons/fa'\r\n\r\nconst List = ({ items, removeItem, editItem }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {items.map((item) => {\r\n                const {id, title} = item;\r\n            return(\r\n            <ul className=\"list-group list-group-flush\" key={id}>\r\n                <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    {title}\r\n                    <div style={{ float : \"right\" }}>\r\n\r\n                        {/* <input type=\"checkbox\" onChange={() => checkedItem(id)} /> */}\r\n                        <button type=\"button\" className=\"edit-btn\" onClick={() => editItem(id)}> <FaEdit /> </button>\r\n                        <button type=\"button\" className=\"delet-btn\" onClick={() => removeItem(id)}> <FaTrash /> </button>\r\n\r\n                    </div>\r\n\r\n                </li>\r\n            </ul>\r\n            )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Alert from './component/Alert';\nimport List from './component/List';\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"todolist\");\n  if (list) {\n    return (list = JSON.parse(localStorage.getItem(\"todolist\")));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIdEditing] = useState(false);\n  const [editId, setEditID] = useState(null);\n  // const [check, setCheck] = useState(false);\n  // console.log(\"Checked Button\",check);\n  const [alert, setAlert] = useState({ show: false, msg: \"\", type: \"\" });\n\n  useEffect(() => {\n    localStorage.setItem(\"todolist\", JSON.stringify(list));\n  }, [list]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name) {\n      showAlert(true, \"danger\", \"Please Enter Value\");\n    } else if (name && isEditing) {\n      setList(\n        list.map((item) => {\n          if (item.id === editId) {\n            return { ...item, title: name }\n          }\n          return item\n        })\n      );\n      setName(\"\");\n      setEditID(null);\n      setIdEditing(false);\n      showAlert(true, \"success\", \"Value Change\");\n    } else {\n      showAlert(true, \"success\", \"Item Added to the List\");\n      const newItem = { id: new Date().getTime().toString(), title: name };\n      setList([...list, newItem]);\n      setName(\"\");\n    }\n  }\n  const showAlert = (show = false, type = \"\", msg = \"\") => {\n    setAlert({ show, type, msg });\n  }\n\n  const removeItem = (id) => {\n    showAlert(true, \"danger\", \"Item Removed\");\n    setList(list.filter((item) => item.id !== id));\n  };\n  const editItem = (id) => {\n    const editItem = list.find((item) => item.id === id);\n    setIdEditing(true);\n    setEditID(id);\n    setName(editItem.title);\n  };\n  const clearList = () => {\n    showAlert(true, \"danger\", \"Empty List\");\n    setList([]);\n  };\n\n  // const checkedItem = (id) =>{\n  //     console.log(id);\n  //     // console.log(setCheck(true));\n  //     // setCheck(check !== true)\n  //   };\n\n  return (\n    <section className=\"section-center\">\n      <form onSubmit={handleSubmit}>\n        {alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />}\n        <h3 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>Todo List</h3>\n        <div className=\"mb-3 form\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"Enter Value\" onChange={(e) => setName(e.target.value)} value={name} />\n          <button type=\"submit\" className=\"btn btn-success\">{isEditing ? \"Edit\" : \"Submit\"} </button>\n        </div>\n      </form>\n      {list.length > 0 && (\n        <div style={{ marginTop: \"2rem\" }}>\n          <List items={list} removeItem={removeItem} editItem={editItem} />\n          <div className=\"text-center\">\n            <button className=\"btn btn-warning\" onClick={clearList}>Clear Items</button>\n          </div>\n        </div>\n      )}\n    </section>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}